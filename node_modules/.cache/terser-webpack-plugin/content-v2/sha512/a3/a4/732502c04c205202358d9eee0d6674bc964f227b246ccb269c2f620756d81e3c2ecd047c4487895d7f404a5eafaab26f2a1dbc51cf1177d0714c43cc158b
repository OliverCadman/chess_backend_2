{"code":"!function(e,t){for(var o in t)e[o]=t[o]}(exports,function(e){var t={};function o(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,o),r.l=!0,r.exports}return o.m=e,o.c=t,o.d=function(e,t,n){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},o.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},o.t=function(e,t){if(1&t&&(e=o(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(o.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var r in e)o.d(n,r,function(t){return e[t]}.bind(null,r));return n},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,\"a\",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p=\"\",o(o.s=39)}({39:function(e,t){function o(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function n(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}let i,s,a=[],c={};const l=()=>{i.on(\"callUser\",e=>{console.group(\"CALL USER DATA\"),console.log(e),console.groupEnd(),s.to(e.userToCall).emit(\"callConnected\",{signal:e.signalData,from:e.from})}),i.on(\"acceptCall\",e=>{s.to(e.to).emit(\"callAccepted\",e.signal)})};function m(e){this.join(\"Room-\"+e.gameID),this.username=e.userName.creator;s.sockets.in(\"Room-\"+e.gameID).emit(\"connectToRoom\",\"You are connected to room \"+e.gameID),c[e.gameID]||(c[e.gameID]={}),c[e.gameID].creator=this.username,c[e.gameID].isOpen=!0,c[e.gameID].players=[this.username],c[e.gameID].socketIDs=[this.id],c[e.gameID].gameID=e.gameID,a.includes(c[e.gameID])||a.push(c[e.gameID]),this.emit(\"gameCreated\",{mySocketID:this.id})}function u(e){console.log(\"GAME ID IN REQUEST USERNAME:\",e),s.to(e).emit(\"giveUsername\",this.id),console.log(\"IO IN REQUEST USERNAME:\",s)}function p(e){console.log(\"RECEIVED USERNAME:\",e),e.socketId=this.id,s.to(e.gameid).emit(\"getOpponentUserName\",e)}function f(e){console.group(\"OPPONENT JOINED GAME DATA\"),console.log(e),console.groupEnd();let t=this;console.log(\"SOCKET\",t.id);const o=\"Room-\"+e.gameID,r=a.map(o=>(!o.gameID!==e.gameID&&t.emit(\"status\",\"Game doesn't exist.\"),o));if(r[0].players.length<2){t.join(\"Room-\"+e.gameID),r[0].players.push(e.opponentUserName),r[0].socketIDs.push(t.id);const i=r[0].socketIDs;2===r[0].players.length&&(e.socketID=t.id,e.socketIDArray=i,s.sockets.in(o).emit(\"startGame\",n(n({},e),{},{playerNames:r[0].players})))}else t.emit(\"status\",\"This room is full.\");s.sockets.in(o).emit(\"playerJoinedGame\",{playerNames:r[0].players})}function g(e){const t=\"Room-\"+e.gameID;s.to(t).emit(\"opponent move\",e)}function d(e){console.log(\"DELETE GAME DATA\",i)}function D(){a||s.emit(\"status\",\"No games in session.\"),s.emit(\"listAllGames\",a)}t.initializeGame=(e,t)=>{s=e,i=t,i.on(\"createNewGame\",m),i.on(\"opponentJoinedGame\",f),i.on(\"playerJoinedGame\",f),i.on(\"findAllGames\",D),i.on(\"disconnect\",e=>{i.emit(\"disconnected\")}),i.on(\"new move\",g),i.on(\"requestUserName\",u),i.on(\"receivedUsername\",p),i.on(\"deleteGame\",d),l()}}}));","extractedComments":[]}